temporal_dir: /home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/hickle/splits/
loading options from checkpoint /home/b.gong/models/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/vae
----------------------------------- Options ------------------------------------
batch_size = 2
checkpoint = /home/b.gong/models/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/vae
dataset = era5
dataset_hparams = sequence_length=20
fps = 4
gif_length = None
gpu_mem_frac = 0
input_dir = /home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/tfrecords
mode = test
model = vae
model_hparams = None
num_epochs = 1
num_samples = None
num_stochastic_samples = 1
output_gif_dir = /home/b.gong/results/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/vae
output_png_dir = /home/b.gong/results/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/vae
results_dir = /home/b.gong/results/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500
results_gif_dir = /home/b.gong/results/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500
results_png_dir = /home/b.gong/results/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500
seed = 7
------------------------------------- End --------------------------------------
datset_class ERA5Dataset_v2
FILENAMES ['/home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/tfrecords/test/sequence_0_to_1.tfrecords', '/home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/tfrecords/test/sequence_10_to_11.tfrecords', '/home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/tfrecords/test/sequence_12_to_13.tfrecords', '/home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/tfrecords/test/sequence_2_to_3.tfrecords', '/home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/tfrecords/test/sequence_4_to_5.tfrecords', '/home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/tfrecords/test/sequence_6_to_7.tfrecords', '/home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/tfrecords/test/sequence_8_to_9.tfrecords']
files ['/home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/tfrecords/test/sequence_0_to_1.tfrecords', '/home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/tfrecords/test/sequence_10_to_11.tfrecords', '/home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/tfrecords/test/sequence_12_to_13.tfrecords', '/home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/tfrecords/test/sequence_2_to_3.tfrecords', '/home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/tfrecords/test/sequence_4_to_5.tfrecords', '/home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/tfrecords/test/sequence_6_to_7.tfrecords', '/home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/tfrecords/test/sequence_8_to_9.tfrecords']
mode test
Parse features {'images/encoded': <tensorflow.python.framework.sparse_tensor.SparseTensor object at 0x7f4f87630b70>, 'channels': <tf.Tensor 'ParseSingleExample/ParseSingleExample:3' shape=() dtype=int64>, 'height': <tf.Tensor 'ParseSingleExample/ParseSingleExample:4' shape=() dtype=int64>, 'sequence_length': <tf.Tensor 'ParseSingleExample/ParseSingleExample:5' shape=() dtype=int64>, 'width': <tf.Tensor 'ParseSingleExample/ParseSingleExample:6' shape=() dtype=int64>}
Image shape 20, 128,160,3
DBBUG: INPUT Tensor("strided_slice:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_0_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_0_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_0_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_0_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_1:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_1:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_1_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_1:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_1_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_1_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_1_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_2:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_2:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_2_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_2:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_2_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_2_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_2_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_3:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_3:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_3_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_3:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_3_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_3_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_3_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_4:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_4:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_4_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_4:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_4_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_4_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_4_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_5:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_5:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_5_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_5:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_5_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_5_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_5_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_6:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_6:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_6_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_6:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_6_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_6_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_6_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_7:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_7:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_7_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_7:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_7_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_7_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_7_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_8:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_8:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_8_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_8:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_8_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_8_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_8_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_9:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_9:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_9_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_9:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_9_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_9_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_9_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_10:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_10:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_10_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_10:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_10_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_10_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_10_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_11:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_11:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_11_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_11:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_11_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_11_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_11_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_12:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_12:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_12_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_12:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_12_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_12_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_12_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_13:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_13:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_13_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_13:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_13_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_13_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_13_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_14:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_14:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_14_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_14:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_14_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_14_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_14_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_15:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_15:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_15_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_15:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_15_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_15_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_15_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_16:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_16:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_16_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_16:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_16_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_16_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_16_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_17:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_17:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_17_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_17:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_17_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_17_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_17_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_18:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_18:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_18_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_18:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_18_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_18_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_18_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
DBBUG: INPUT Tensor("strided_slice_19:0", shape=(2, 128, 160, 3), dtype=float32)
conv_layer activation function relu
DEBUG input shape (2, 128, 160, 3)
Encode_1_shape (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 2_shape, (2, 64, 80, 8)
conv_layer activation function relu
DEBUG input shape (2, 64, 80, 8)
Encode 3_shape,  (2, 32, 40, 8)
Encode 4_shape,  (2, 10240)
conv4_shape [2, 32, 40, 8]
latend variables z  Tensor("add_19:0", shape=(2, 16), dtype=float32)
latend variables z2  Tensor("sq_19_deenc_fc1_fc/Relu:0", shape=(2, 10240), dtype=float32)
latend variables z3  Tensor("Reshape_19:0", shape=(2, 32, 40, 8), dtype=float32)
input_channel 8
output_shape Tensor("sq_19_decode_5_trans_conv/stack:0", shape=(4,), dtype=int32)
Decode 5 shape (2, 64, 80, 8)
input_channel 8
output_shape Tensor("sq_19_decode_6_trans_conv/stack:0", shape=(4,), dtype=int32)
input_channel 8
output_shape Tensor("sq_19_decode_8_trans_conv/stack:0", shape=(4,), dtype=int32)
X_hat (2, 128, 160, 3)
X_hat (2, 20, 128, 160, 3)
zlog_sigma_sq_all (2, 20, 16)
creating restore saver from checkpoint /home/b.gong/models/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/vae
temporal_dir: /home/b.gong/preprocessedData/era5-Y2015toY2017M01to12-128x160-74d00N71d00E-T_MSL_gph500/hickle/splits/
test temporal_pkl file looks like folowing [[cftime.DatetimeGregorian(2017-02-01 00:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 01:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 02:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 03:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 04:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 05:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 06:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 07:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 08:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 09:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 10:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 11:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 12:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 13:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 14:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 15:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 16:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 17:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 18:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 19:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 20:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 21:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 22:00:00)]
 [cftime.DatetimeGregorian(2017-02-01 23:00:00)]
 [cftime.DatetimeGregorian(2017-02-02 00:00:00)]
 [cftime.DatetimeGregorian(2017-02-02 01:00:00)]
 [cftime.DatetimeGregorian(2017-02-02 02:00:00)]
 [cftime.DatetimeGregorian(2017-02-02 03:00:00)]
 [cftime.DatetimeGregorian(2017-02-02 04:00:00)]
 [cftime.DatetimeGregorian(2017-02-02 05:00:00)]
 [cftime.DatetimeGregorian(2017-02-02 06:00:00)]
 [cftime.DatetimeGregorian(2017-02-02 07:00:00)]
 [cftime.DatetimeGregorian(2017-02-02 08:00:00)]
 [cftime.DatetimeGregorian(2017-02-02 09:00:00)]]
Sample id 0
Sample id 2
Sample id 4
Sample id 6
Sample id 8
Sample id 10
Sample id 12
Sample id 14
Sample id 16
Sample id 18
Sample id 20
Sample id 22
Sample id 24
Sample id 26
timestamp: <class 'numpy.ndarray'>
persistent ts [cftime.DatetimeGregorian(2017-02-01 02:00:00)]
persistent index in test set: 2
persistent_X.shape (20, 128, 160, 3)
name _Stochastic_id_0_Time_20170202-020000
timestamp: <class 'numpy.ndarray'>
persistent ts [cftime.DatetimeGregorian(2017-02-01 03:00:00)]
persistent index in test set: 3
persistent_X.shape (20, 128, 160, 3)
name _Stochastic_id_0_Time_20170202-030000
Save persistent all
Save generate all
Sample id 28
timestamp: <class 'numpy.ndarray'>
persistent ts [cftime.DatetimeGregorian(2017-02-01 04:00:00)]
persistent index in test set: 4
persistent_X.shape (20, 128, 160, 3)
name _Stochastic_id_0_Time_20170202-040000
timestamp: <class 'numpy.ndarray'>
persistent ts [cftime.DatetimeGregorian(2017-02-01 05:00:00)]
persistent index in test set: 5
persistent_X.shape (20, 128, 160, 3)
name _Stochastic_id_0_Time_20170202-050000
Save persistent all
Save generate all
Sample id 30
timestamp: <class 'numpy.ndarray'>
persistent ts [cftime.DatetimeGregorian(2017-02-01 06:00:00)]
persistent index in test set: 6
persistent_X.shape (20, 128, 160, 3)
name _Stochastic_id_0_Time_20170202-060000
timestamp: <class 'numpy.ndarray'>
persistent ts [cftime.DatetimeGregorian(2017-02-01 07:00:00)]
persistent index in test set: 7
persistent_X.shape (20, 128, 160, 3)
name _Stochastic_id_0_Time_20170202-070000
Save persistent all
Save generate all
Sample id 32
timestamp: <class 'numpy.ndarray'>
persistent ts [cftime.DatetimeGregorian(2017-02-01 08:00:00)]
persistent index in test set: 8
persistent_X.shape (20, 128, 160, 3)
name _Stochastic_id_0_Time_20170202-080000
timestamp: <class 'numpy.ndarray'>
persistent ts [cftime.DatetimeGregorian(2017-02-01 09:00:00)]
persistent index in test set: 9
persistent_X.shape (20, 128, 160, 3)
name _Stochastic_id_0_Time_20170202-090000
Save persistent all
Save generate all
Sample id 34
